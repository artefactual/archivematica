[tox]
skipsdist = True
envlist =
    archivematica-common
    dashboard
    mcp-server
    mcp-client
    mcp-client-ensure-no-mutable-globals
    storage-service
    migrations-dashboard
    migrations-storage-service
    linting

[testenv]
skip_install = True
deps = -r{toxinidir}/requirements-dev.txt
commands = py.test {posargs}
allowlist_externals =
    bash
    find
setenv =
    # General
    LOGNAME = user
    DJANGO_SETTINGS_MODULE = {env:DJANGO_SETTINGS_MODULE:settings.test}
    PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:}
    SRC_DIR = {toxinidir}/src
    HACK_DIR = {toxinidir}/hack
    # Archivematica Common
    ARCHIVEMATICA_COMMON_ROOT = {env:SRC_DIR}/archivematicaCommon
    ARCHIVEMATICA_COMMON_DIR = {env:ARCHIVEMATICA_COMMON_ROOT}/lib
    # Dashboard
    DASHBOARD_ROOT = {env:SRC_DIR}/dashboard
    DASHBOARD_DIR = {env:DASHBOARD_ROOT}/src
    DASHBOARD_PYTHONPATH = {env:DASHBOARD_DIR}:{env:ARCHIVEMATICA_COMMON_DIR}
    # MCP Server
    MCPSERVER_ROOT = {env:SRC_DIR}/MCPServer
    MCPSERVER_DIR = {env:MCPSERVER_ROOT}/lib
    MCPSERVER_PYTHONPATH = {env:MCPSERVER_DIR}:{env:ARCHIVEMATICA_COMMON_DIR}:{env:DASHBOARD_DIR}
    # MCP Client
    MCPCLIENT_ROOT = {env:SRC_DIR}/MCPClient
    MCPCLIENT_DIR = {env:MCPCLIENT_ROOT}/lib
    MCPCLIENT_PYTHONPATH = {env:MCPCLIENT_DIR}:{env:MCPCLIENT_DIR}/clientScripts:{env:ARCHIVEMATICA_COMMON_DIR}:{env:DASHBOARD_DIR}
    # Storage Service
    STORAGE_SERVICE_ROOT = {env:HACK_DIR}/submodules/archivematica-storage-service
    STORAGE_SERVICE_DIR = {env:STORAGE_SERVICE_ROOT}/storage_service
    STORAGE_SERVICE_PYTHONPATH = {env:STORAGE_SERVICE_DIR}:{env:STORAGE_SERVICE_DIR}/storage_service
    # TOXENV-specific
    archivematica-common: PYTHONPATH = {env:DASHBOARD_PYTHONPATH}
    dashboard: PYTHONPATH = {env:DASHBOARD_PYTHONPATH}
    mcp-server: PYTHONPATH = {env:MCPSERVER_PYTHONPATH}
    mcp-client: PYTHONPATH = {env:MCPCLIENT_PYTHONPATH}
    storage-service: PYTHONPATH = {env:STORAGE_SERVICE_PYTHONPATH}
    migrations-dashboard: PYTHONPATH = {env:DASHBOARD_PYTHONPATH}
    migrations-storage-service: PYTHONPATH = {env:STORAGE_SERVICE_PYTHONPATH}
    # Setting HOME prevents Python's pwd module to ask for a real uid inside
    # the container, and using {temp_dir} allows caching the pre-commit and flake8
    # dependencies in the tox host
    linting: HOME = {temp_dir}/user
changedir =
    archivematica-common: {env:ARCHIVEMATICA_COMMON_ROOT}
    dashboard: {env:DASHBOARD_ROOT}
    mcp-server: {env:MCPSERVER_ROOT}
    mcp-client: {env:MCPCLIENT_ROOT}
    storage-service: {env:STORAGE_SERVICE_DIR}

[testenv:mcp-client-ensure-no-mutable-globals]
commands = python {env:MCPCLIENT_DIR}/ensure_no_mutable_globals.py

[testenv:storage-service]
deps =
    -r{env:STORAGE_SERVICE_ROOT}/requirements-dev.txt

[testenv:migrations-dashboard]
commands = django-admin makemigrations --check --dry-run

[testenv:migrations-storage-service]
deps = {[testenv:storage-service]deps}
commands = {[testenv:migrations-dashboard]commands}

[testenv:linting]
basepython = python3
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure

[flake8]
exclude = .tox, .git, __pycache__, .cache, build, dist, *.pyc, *.egg-info, .eggs
# Error codes:
# - https://flake8.pycqa.org/en/latest/user/error-codes.html
# - https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
# - https://github.com/PyCQA/flake8-bugbear#list-of-warnings
#
# E203: whitespace before ‘,’, ‘;’, or ‘:’
# E402: module level import not at top of file
# E501: line too long
# W503: line break before binary operator
#
# TODO: remove
# E722: do not use bare 'except'
ignore =
    E203,
    E402,
    E501,
    W503,
    E722

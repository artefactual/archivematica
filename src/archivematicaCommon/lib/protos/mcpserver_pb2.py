# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mcpserver.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='mcpserver.proto',
  package='pb',
  syntax='proto3',
  serialized_pb=_b('\n\x0fmcpserver.proto\x12\x02pb\"$\n\x16\x41pproveTransferRequest\x12\n\n\x02id\x18\x01 \x01(\t\"+\n\x17\x41pproveTransferResponse\x12\x10\n\x08\x61pproved\x18\x01 \x01(\x08\"1\n\x11\x41pproveJobRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x10\n\x08\x63hoiceId\x18\x02 \x01(\t\"&\n\x12\x41pproveJobResponse\x12\x10\n\x08\x61pproved\x18\x01 \x01(\x08\"\x13\n\x11\x43hoiceListRequest\"\xd3\x02\n\x12\x43hoiceListResponse\x12(\n\x04jobs\x18\x01 \x03(\x0b\x32\x1a.pb.ChoiceListResponse.Job\x12\x15\n\rtransferCount\x18\x02 \x01(\x05\x12\x13\n\x0bingestCount\x18\x03 \x01(\x05\x1a\xe6\x01\n\x03Job\x12\n\n\x02id\x18\x01 \x01(\t\x12\x35\n\x08unitType\x18\x02 \x01(\x0e\x32#.pb.ChoiceListResponse.Job.UnitType\x12\x32\n\x07\x63hoices\x18\x03 \x03(\x0b\x32!.pb.ChoiceListResponse.Job.Choice\x1a,\n\x06\x43hoice\x12\r\n\x05value\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\":\n\x08UnitType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08TRANSFER\x10\x01\x12\n\n\x06INGEST\x10\x02\x12\x07\n\x03\x44IP\x10\x03\x32\xd1\x01\n\tMCPServer\x12;\n\nApproveJob\x12\x15.pb.ApproveJobRequest\x1a\x16.pb.ApproveJobResponse\x12J\n\x0f\x41pproveTransfer\x12\x1a.pb.ApproveTransferRequest\x1a\x1b.pb.ApproveTransferResponse\x12;\n\nChoiceList\x12\x15.pb.ChoiceListRequest\x1a\x16.pb.ChoiceListResponseb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_CHOICELISTRESPONSE_JOB_UNITTYPE = _descriptor.EnumDescriptor(
  name='UnitType',
  full_name='pb.ChoiceListResponse.Job.UnitType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRANSFER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INGEST', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIP', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=500,
  serialized_end=558,
)
_sym_db.RegisterEnumDescriptor(_CHOICELISTRESPONSE_JOB_UNITTYPE)


_APPROVETRANSFERREQUEST = _descriptor.Descriptor(
  name='ApproveTransferRequest',
  full_name='pb.ApproveTransferRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='pb.ApproveTransferRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=59,
)


_APPROVETRANSFERRESPONSE = _descriptor.Descriptor(
  name='ApproveTransferResponse',
  full_name='pb.ApproveTransferResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='approved', full_name='pb.ApproveTransferResponse.approved', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=104,
)


_APPROVEJOBREQUEST = _descriptor.Descriptor(
  name='ApproveJobRequest',
  full_name='pb.ApproveJobRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='pb.ApproveJobRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='choiceId', full_name='pb.ApproveJobRequest.choiceId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=106,
  serialized_end=155,
)


_APPROVEJOBRESPONSE = _descriptor.Descriptor(
  name='ApproveJobResponse',
  full_name='pb.ApproveJobResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='approved', full_name='pb.ApproveJobResponse.approved', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=157,
  serialized_end=195,
)


_CHOICELISTREQUEST = _descriptor.Descriptor(
  name='ChoiceListRequest',
  full_name='pb.ChoiceListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=197,
  serialized_end=216,
)


_CHOICELISTRESPONSE_JOB_CHOICE = _descriptor.Descriptor(
  name='Choice',
  full_name='pb.ChoiceListResponse.Job.Choice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='pb.ChoiceListResponse.Job.Choice.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='pb.ChoiceListResponse.Job.Choice.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=454,
  serialized_end=498,
)

_CHOICELISTRESPONSE_JOB = _descriptor.Descriptor(
  name='Job',
  full_name='pb.ChoiceListResponse.Job',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='pb.ChoiceListResponse.Job.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unitType', full_name='pb.ChoiceListResponse.Job.unitType', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='choices', full_name='pb.ChoiceListResponse.Job.choices', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CHOICELISTRESPONSE_JOB_CHOICE, ],
  enum_types=[
    _CHOICELISTRESPONSE_JOB_UNITTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=328,
  serialized_end=558,
)

_CHOICELISTRESPONSE = _descriptor.Descriptor(
  name='ChoiceListResponse',
  full_name='pb.ChoiceListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='jobs', full_name='pb.ChoiceListResponse.jobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transferCount', full_name='pb.ChoiceListResponse.transferCount', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ingestCount', full_name='pb.ChoiceListResponse.ingestCount', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CHOICELISTRESPONSE_JOB, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=219,
  serialized_end=558,
)

_CHOICELISTRESPONSE_JOB_CHOICE.containing_type = _CHOICELISTRESPONSE_JOB
_CHOICELISTRESPONSE_JOB.fields_by_name['unitType'].enum_type = _CHOICELISTRESPONSE_JOB_UNITTYPE
_CHOICELISTRESPONSE_JOB.fields_by_name['choices'].message_type = _CHOICELISTRESPONSE_JOB_CHOICE
_CHOICELISTRESPONSE_JOB.containing_type = _CHOICELISTRESPONSE
_CHOICELISTRESPONSE_JOB_UNITTYPE.containing_type = _CHOICELISTRESPONSE_JOB
_CHOICELISTRESPONSE.fields_by_name['jobs'].message_type = _CHOICELISTRESPONSE_JOB
DESCRIPTOR.message_types_by_name['ApproveTransferRequest'] = _APPROVETRANSFERREQUEST
DESCRIPTOR.message_types_by_name['ApproveTransferResponse'] = _APPROVETRANSFERRESPONSE
DESCRIPTOR.message_types_by_name['ApproveJobRequest'] = _APPROVEJOBREQUEST
DESCRIPTOR.message_types_by_name['ApproveJobResponse'] = _APPROVEJOBRESPONSE
DESCRIPTOR.message_types_by_name['ChoiceListRequest'] = _CHOICELISTREQUEST
DESCRIPTOR.message_types_by_name['ChoiceListResponse'] = _CHOICELISTRESPONSE

ApproveTransferRequest = _reflection.GeneratedProtocolMessageType('ApproveTransferRequest', (_message.Message,), dict(
  DESCRIPTOR = _APPROVETRANSFERREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:pb.ApproveTransferRequest)
  ))
_sym_db.RegisterMessage(ApproveTransferRequest)

ApproveTransferResponse = _reflection.GeneratedProtocolMessageType('ApproveTransferResponse', (_message.Message,), dict(
  DESCRIPTOR = _APPROVETRANSFERRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:pb.ApproveTransferResponse)
  ))
_sym_db.RegisterMessage(ApproveTransferResponse)

ApproveJobRequest = _reflection.GeneratedProtocolMessageType('ApproveJobRequest', (_message.Message,), dict(
  DESCRIPTOR = _APPROVEJOBREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:pb.ApproveJobRequest)
  ))
_sym_db.RegisterMessage(ApproveJobRequest)

ApproveJobResponse = _reflection.GeneratedProtocolMessageType('ApproveJobResponse', (_message.Message,), dict(
  DESCRIPTOR = _APPROVEJOBRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:pb.ApproveJobResponse)
  ))
_sym_db.RegisterMessage(ApproveJobResponse)

ChoiceListRequest = _reflection.GeneratedProtocolMessageType('ChoiceListRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHOICELISTREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:pb.ChoiceListRequest)
  ))
_sym_db.RegisterMessage(ChoiceListRequest)

ChoiceListResponse = _reflection.GeneratedProtocolMessageType('ChoiceListResponse', (_message.Message,), dict(

  Job = _reflection.GeneratedProtocolMessageType('Job', (_message.Message,), dict(

    Choice = _reflection.GeneratedProtocolMessageType('Choice', (_message.Message,), dict(
      DESCRIPTOR = _CHOICELISTRESPONSE_JOB_CHOICE,
      __module__ = 'mcpserver_pb2'
      # @@protoc_insertion_point(class_scope:pb.ChoiceListResponse.Job.Choice)
      ))
    ,
    DESCRIPTOR = _CHOICELISTRESPONSE_JOB,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:pb.ChoiceListResponse.Job)
    ))
  ,
  DESCRIPTOR = _CHOICELISTRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:pb.ChoiceListResponse)
  ))
_sym_db.RegisterMessage(ChoiceListResponse)
_sym_db.RegisterMessage(ChoiceListResponse.Job)
_sym_db.RegisterMessage(ChoiceListResponse.Job.Choice)


import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class MCPServerStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ApproveJob = channel.unary_unary(
        '/pb.MCPServer/ApproveJob',
        request_serializer=ApproveJobRequest.SerializeToString,
        response_deserializer=ApproveJobResponse.FromString,
        )
    self.ApproveTransfer = channel.unary_unary(
        '/pb.MCPServer/ApproveTransfer',
        request_serializer=ApproveTransferRequest.SerializeToString,
        response_deserializer=ApproveTransferResponse.FromString,
        )
    self.ChoiceList = channel.unary_unary(
        '/pb.MCPServer/ChoiceList',
        request_serializer=ChoiceListRequest.SerializeToString,
        response_deserializer=ChoiceListResponse.FromString,
        )


class MCPServerServicer(object):

  def ApproveJob(self, request, context):
    """ApproveJob proceeds processing with a choice given by the user
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ApproveTransfer(self, request, context):
    """ApproveTransfer starts a transfer awaiting for approval
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ChoiceList(self, request, context):
    """ChoiceList returns the list of job choices awaiting for decision
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MCPServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ApproveJob': grpc.unary_unary_rpc_method_handler(
          servicer.ApproveJob,
          request_deserializer=ApproveJobRequest.FromString,
          response_serializer=ApproveJobResponse.SerializeToString,
      ),
      'ApproveTransfer': grpc.unary_unary_rpc_method_handler(
          servicer.ApproveTransfer,
          request_deserializer=ApproveTransferRequest.FromString,
          response_serializer=ApproveTransferResponse.SerializeToString,
      ),
      'ChoiceList': grpc.unary_unary_rpc_method_handler(
          servicer.ChoiceList,
          request_deserializer=ChoiceListRequest.FromString,
          response_serializer=ChoiceListResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.MCPServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaMCPServerServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def ApproveJob(self, request, context):
    """ApproveJob proceeds processing with a choice given by the user
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ApproveTransfer(self, request, context):
    """ApproveTransfer starts a transfer awaiting for approval
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ChoiceList(self, request, context):
    """ChoiceList returns the list of job choices awaiting for decision
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaMCPServerStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def ApproveJob(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """ApproveJob proceeds processing with a choice given by the user
    """
    raise NotImplementedError()
  ApproveJob.future = None
  def ApproveTransfer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """ApproveTransfer starts a transfer awaiting for approval
    """
    raise NotImplementedError()
  ApproveTransfer.future = None
  def ChoiceList(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """ChoiceList returns the list of job choices awaiting for decision
    """
    raise NotImplementedError()
  ChoiceList.future = None


def beta_create_MCPServer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('pb.MCPServer', 'ApproveJob'): ApproveJobRequest.FromString,
    ('pb.MCPServer', 'ApproveTransfer'): ApproveTransferRequest.FromString,
    ('pb.MCPServer', 'ChoiceList'): ChoiceListRequest.FromString,
  }
  response_serializers = {
    ('pb.MCPServer', 'ApproveJob'): ApproveJobResponse.SerializeToString,
    ('pb.MCPServer', 'ApproveTransfer'): ApproveTransferResponse.SerializeToString,
    ('pb.MCPServer', 'ChoiceList'): ChoiceListResponse.SerializeToString,
  }
  method_implementations = {
    ('pb.MCPServer', 'ApproveJob'): face_utilities.unary_unary_inline(servicer.ApproveJob),
    ('pb.MCPServer', 'ApproveTransfer'): face_utilities.unary_unary_inline(servicer.ApproveTransfer),
    ('pb.MCPServer', 'ChoiceList'): face_utilities.unary_unary_inline(servicer.ChoiceList),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_MCPServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('pb.MCPServer', 'ApproveJob'): ApproveJobRequest.SerializeToString,
    ('pb.MCPServer', 'ApproveTransfer'): ApproveTransferRequest.SerializeToString,
    ('pb.MCPServer', 'ChoiceList'): ChoiceListRequest.SerializeToString,
  }
  response_deserializers = {
    ('pb.MCPServer', 'ApproveJob'): ApproveJobResponse.FromString,
    ('pb.MCPServer', 'ApproveTransfer'): ApproveTransferResponse.FromString,
    ('pb.MCPServer', 'ChoiceList'): ChoiceListResponse.FromString,
  }
  cardinalities = {
    'ApproveJob': cardinality.Cardinality.UNARY_UNARY,
    'ApproveTransfer': cardinality.Cardinality.UNARY_UNARY,
    'ChoiceList': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'pb.MCPServer', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
